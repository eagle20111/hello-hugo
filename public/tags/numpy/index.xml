<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>numpy on Jian&#39;s Blog</title>
    <link>https://jianye0428.github.io/tags/numpy/</link>
    <description>Recent content in numpy on Jian&#39;s Blog</description>
    <image>
      <url>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</url>
      <link>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 24 May 2022 20:52:49 +0800</lastBuildDate><atom:link href="https://jianye0428.github.io/tags/numpy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Numpy Notes</title>
      <link>https://jianye0428.github.io/posts/notes/2022-05-24_numpy/</link>
      <pubDate>Tue, 24 May 2022 20:52:49 +0800</pubDate>
      
      <guid>https://jianye0428.github.io/posts/notes/2022-05-24_numpy/</guid>
      <description>numpy function   np.stack();np.vstack();np.hstack();np.concatenate() 区别
  np.concatenate()函数根据指定的维度，对一个元组、列表中的list或者ndarray进行连接
1 2 3  # np.concatenate() numpy.concatenate((a1, a2, ...), axis=0)#在0维进行拼接 numpy.concatenate((a1, a2, ...), axis=1)#在1维进行拼接     np.stack()函数的原型是numpy.stack(arrays, axis=0)，即将一堆数组的数据按照指定的维度进行堆叠。
1 2 3  # np.stack() numpy.stack([a1, a2], axis=0)#在0维进行拼接 numpy.stack([a1, a2], axis=1)#在1维进行拼接    注意:进行stack的两个数组必须有相同的形状，同时，输出的结果的维度是比输入的数组都要多一维。
   np.vstack()的函数原型：vstack(tup) ，参数tup可以是元组，列表，或者numpy数组，返回结果为numpy的数组。它是垂直（按照行顺序）的把数组给堆叠起来。
  np.hstack()的函数原型：hstack(tup) ，参数tup可以是元组，列表，或者numpy数组，返回结果为numpy的数组。它其实就是水平(按列顺序)把数组给堆叠起来，与vstack()函数正好相反。
   ref: https://cloud.tencent.com/developer/article/1378491
    </description>
    </item>
    
  </channel>
</rss>
