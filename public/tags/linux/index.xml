<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on Jian&#39;s Blog</title>
    <link>https://jianye0428.github.io/tags/linux/</link>
    <description>Recent content in Linux on Jian&#39;s Blog</description>
    <image>
      <url>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</url>
      <link>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 13 May 2022 10:53:31 +0800</lastBuildDate><atom:link href="https://jianye0428.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux filesystem</title>
      <link>https://jianye0428.github.io/posts/tech/2022-05-13_linux_filesystem/</link>
      <pubDate>Fri, 13 May 2022 10:53:31 +0800</pubDate>
      
      <guid>https://jianye0428.github.io/posts/tech/2022-05-13_linux_filesystem/</guid>
      <description>Linux系统各系统文件夹下的区别 首先，usr 指 Unix System Resource，而不是User。
通常，
  /usr/bin下面的都是系统预装的可执行程序，会随着系统升级而改变。
  /usr/local/bin目录是给用户放置自己的可执行程序的地方，推荐放在这里，不会被系统升级而覆盖同名文件。
  如果两个目录下有相同的可执行程序，谁优先执行受到PATH环境变量的影响，比如我的一台服务器的PATH变量为。
1  echo $PATH   这里/usr/local/bin优先于/usr/bin, 一般都是如此。
/lib是内核级的, /usr/lib是系统级的, /usr/local/lib是用户级的.
  / - 对你的电脑来说, 有且只有一个根目录。所有的东西都是从这里开始。举个例子: 当你在终端里输入&amp;quot;/home&amp;quot;，你其实是在告诉电脑，先从/(根目录)开始，再进入到home目录。
  /lib/ — 包含许多被/bin/和/sbin/中的程序使用的库文件。目录/usr/lib/中含有更多用于用户程序的库文件。/lib目录下放置的是/bin和/sbin目录下程序所需的库文件。/lib目录下的文件的名称遵循下面的格式：
  libc.so.* ld* 仅仅被/usr目录下的程序所使用的共享库不必放到/lib目录下。只有/bin和/sbin下的程序所需要的库有必要放到/lib目录下。实际上，libm.so.*类型的库文件如果被是/bin和/sbin所需要的，也可以放到/usr/lib下。     /bin/ — 用来贮存用户命令。目录 /usr/bin 也被用来贮存用户命令。
  /sbin/ — 许多系统命令(例如 shutdown)的贮存位置。目录/usr/sbin中也包括了许多系统命令。
  /root/ — 根用户(超级用户)的主目录。
  /mnt/ — 该目录中通常包括系统引导后被挂载的文件系统的挂载点。譬如，默认的光盘挂载点是/mnt/cdrom/.
  /boot/ — 包括内核和其它系统启动期间使用的文件。</description>
    </item>
    
  </channel>
</rss>
