<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Jian&#39;s Blog</title>
    <link>https://jianye0428.github.io/posts/</link>
    <description>Recent content in Posts on Jian&#39;s Blog</description>
    <image>
      <url>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</url>
      <link>https://i.loli.net/2021/09/26/3OMGXylm8HUYJ6p.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 09 May 2022 11:54:06 +0800</lastBuildDate><atom:link href="https://jianye0428.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ubuntu 22.04 | zsh 以及 oh-my-zsh的安装和配置</title>
      <link>https://jianye0428.github.io/posts/tech/2022-05-09_zsh_installation/</link>
      <pubDate>Mon, 09 May 2022 11:54:06 +0800</pubDate>
      
      <guid>https://jianye0428.github.io/posts/tech/2022-05-09_zsh_installation/</guid>
      <description>zsh说明   zsh是一个Linux下强大的shell, 由于大多数Linux产品安装以及默认使用bash shell, 但是丝毫不影响极客们对zsh的热衷, 几乎每一款Linux产品都包含有zsh，通常可以用apt-get、urpmi或yum等包管理器进行安装.
  zsh是bash的增强版，其实zsh和bash是两个不同的概念，zsh更加强大。
  通常zsh配置起来非常麻烦，且相当的复杂，所以oh-my-zsh是为了简化zsh的配置而开发的，因此oh-my-zsh算是zsh的配置.
  准备   查看当前系统用shell版本
1  echo $SHELL     查看系统自带哪些shell
1  cat /etc/shells     安装zsh  通过命令行安装zsh 1  sudo apt install zsh     zsh配置   将zsh设置为默认的shell
1  chsh -s /bin/zsh     然后重启电脑
1  reboot     安装oh-my-zsh及其个性化配置 安装oh-my-zsh  执行以下命令安装oh-my-zsh 1  sh -c &amp;#34;$(wget https://raw.</description>
    </item>
    
    <item>
      <title>PPO Algorithm</title>
      <link>https://jianye0428.github.io/posts/tech/2022-05-06_ppo/</link>
      <pubDate>Fri, 06 May 2022 13:16:25 +0200</pubDate>
      
      <guid>https://jianye0428.github.io/posts/tech/2022-05-06_ppo/</guid>
      <description>PPO Architechture hello</description>
    </item>
    
    <item>
      <title>DQN -- Deep Q Network Paper Reading</title>
      <link>https://jianye0428.github.io/posts/tech/2022-05-05_dqn/</link>
      <pubDate>Thu, 05 May 2022 21:52:44 +0800</pubDate>
      
      <guid>https://jianye0428.github.io/posts/tech/2022-05-05_dqn/</guid>
      <description>DQN Framework General Architecture Here is Network listed:
 play Atari games using RL and perform better than human CNN + Q Learning: CNN for frame-skiped images features extraction; and Q Learning for policy generation     Network Channel Kernel Size Stride Activation Output Size     Input NA NA NA NA 84x84x4   First Conv 16 8x8 4 Relu 20x20x6   Second Conv 32 4x4 2 Relu 9x9x32   Hidden NA NA NA Relu 256   Output NA NA NA None 4 to 18     在当时，普遍的做法是为每一个action学习一个函数，而不是一个网络结构直接输出所有q的value.</description>
    </item>
    
    <item>
      <title>TensorRT custom operator development -- ScatterElements</title>
      <link>https://jianye0428.github.io/posts/tech/2022-04-24_tensorrt_custom_operator/</link>
      <pubDate>Sun, 24 Apr 2022 19:34:50 +0800</pubDate>
      
      <guid>https://jianye0428.github.io/posts/tech/2022-04-24_tensorrt_custom_operator/</guid>
      <description>TensorRT Installation Custom Operator ScatterElements </description>
    </item>
    
  </channel>
</rss>
